
defaultTasks 'build'

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven-publish'

group = 'com.lbayer'
base {
    archivesName.set('appup')
}

version = '0.1.14'



repositories {
    mavenLocal()
    mavenCentral()
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.8.0-beta0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'junit:junit:4.12'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name.set('Appup Java Bootstrap')
                description.set('Java application bootstrapping library')
                url.set('https://github.com/lfbayer/appup')

                scm {
                    connection.set('https://github.com/lfbayer/appup.git')
                    developerConnection.set('git@github.com:lfbayer/appup.git')
                    url.set('https://github.com/lfbayer/appup')
                }

                licenses {
                    license {
                        name.set('The Apache License, Version 2.0')
                        url.set('http://www.apache.org/licenses/LICENSE-2.0.txt')
                    }
                }

                developers {
                    developer {
                        id.set('lfbayer')
                        name.set('Leo Bayer')
                        email.set('lfbayer@gmail.com')
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = uri(version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl)

            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : ''
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : ''
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
